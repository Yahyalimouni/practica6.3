{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pr\u00e1ctica 6.2 - Despliegue de servidores web con usuarios autenticados mediante LDAP usando Docker y docker-compose","text":""},{"location":"#introduccion","title":"Introducci\u00f3n","text":"<p>Esta pr\u00e1ctica se enfoca en desplegar servidores web con autenticaci\u00f3n de usuarios mediante LDAP utilizando Docker y docker-compose. Los principales componentes son:</p>"},{"location":"#nginx-demonio-de-autenticacion-ldap-openldap","title":"NGINX + demonio de autenticaci\u00f3n LDAP + OpenLDAP","text":"<p>Tras conectarnos con ssh a nuestro servidor, creamos la estructura siguiente que es la que vamos a necesitar durante esta pr\u00e1ctica</p> <p></p> <p>Creamos un html b\u00e1sico con siguiente contenido: </p> <p>A continuaci\u00f3n configuramos nuestro servidor nginx  </p> <p>Hacemos que escuche el puerto 8090, y que redirige cualquier petici\u00f3n al servicio auth-proxy que a su vez la dirige a otro servicio corriendo en http://nginx-ldap:8888 que es el servicio de autenticaci\u00f3n LDAP.</p> <p>Se establecen los encabezados para la autenticaci\u00f3n:</p> <ul> <li><code>proxy_set_header</code> X-Ldap-URL \"ldap://openldap:1389\";: Define la URL y puerto del servidor LDAP (openldap:1389).</li> <li><code>proxy_set_header</code> X-Ldap-BaseDN \"dc=example,dc=org\";: Define el Base DN del directorio LDAP.</li> <li><code>proxy_set_header</code> X-Ldap-BindDN \"cn=admin,dc=example,dc=org\";: Define el Bind DN, es decir, la cuenta utilizada para autenticarse en LDAP.</li> <li><code>proxy_set_header</code> X-Ldap-BindPass \"adminpassword\";: Define la contrase\u00f1a de la cuenta de administraci\u00f3n LDAP.</li> </ul> <p>Creamos el archivo <code>docker-compose.yml</code> con el siguiente contenido para ejecutar los tres servicios <code>nginx-ldap</code> <code>nginx</code> y <code>openldap</code>:</p> <p></p> <ul> <li>nginx-ldap </li> <li>Utiliza la imagen <code>bitnami/nginx-ldap-auth-daemon-archived</code>, que es un servicio que se encarga de la autenticaci\u00f3n LDAP en Nginx.  </li> <li> <p>Expone el puerto 8888, lo que significa que este servicio estar\u00e1 disponible en http://localhost:8888.</p> </li> <li> <p>nginx </p> </li> <li>Usa la imagen <code>bitnami/nginx</code>, que es una versi\u00f3n de Nginx proporcionada por Bitnami.  </li> <li>Expone el puerto 8090, lo que significa que el servidor Nginx estar\u00e1 accesible en http://localhost:8090.  </li> <li> <p>Usa vol\u00famenes para montar archivos locales dentro del contenedor:</p> <ul> <li><code>./app:/app</code>: Mapea el directorio <code>./app</code> en el host al directorio <code>/app</code> en el contenedor.</li> <li><code>./conf/ldap_nginx.conf:/opt/bitnami/nginx/conf/server_blocks/ldap_nginx.conf</code>: Mapea el archivo de configuraci\u00f3n <code>ldap_nginx.conf</code> al directorio de configuraci\u00f3n de Nginx dentro del contenedor.</li> </ul> </li> <li> <p>openldap </p> </li> <li>Usa la imagen <code>bitnami/openldap</code>, que proporciona un servidor LDAP basado en OpenLDAP.  </li> <li>Expone el puerto 1389, permitiendo el acceso a LDAP en <code>ldap://localhost:1389</code>.  </li> <li>Usa variables de entorno para configurar el servidor LDAP:<ul> <li><code>LDAP_ADMIN_USERNAME=admin</code>: Define el usuario administrador (<code>admin</code>).</li> <li><code>LDAP_ADMIN_PASSWORD=adminpassword</code>: Define la contrase\u00f1a del administrador.</li> <li><code>LDAP_USERS=customuser</code>: Crea un usuario adicional llamado <code>customuser</code>.</li> <li><code>LDAP_PASSWORDS=custompassword</code>: Define la contrase\u00f1a para <code>customuser</code>.</li> </ul> </li> </ul> <p>Con el archivo docker-compose.yml creado, se levantar\u00e1n los contenedores y se comprobar\u00e1 que funcionan correctamente.</p> <p></p> <p>Si accedemos a la direcci\u00f3n <code>http://ip-servidor:8090</code> deber\u00e1 aparecer lo siguiente:</p> <p></p> <p>Introdcimos las credenciales de acceso y deber\u00edamos poder acceder a la p\u00e1gina principal.</p> <p></p>"},{"location":"#despliegue-con-docker-de-php-apache-con-autenticacion-ldap","title":"Despliegue con Docker de PHP + Apache con autenticaci\u00f3n LDAP","text":"<p>Haciendo uso de la anterior estructura de directorios, se crear\u00e1 un archivo index.php con el siguiente contenido:</p> <p></p> <p>En el directorio <code>Docker</code> se crear\u00e1 un archivo <code>Dockerfile</code> con el siguiente contenido:</p> <p></p> <p>Se crear\u00e1 un archivo en el directorio Docker llamado ldap-demo.conf con el siguiente contenido:</p> <p></p> <p>Se crear\u00e1 a continuacion en el mismo directorio un archivo <code>.htaccess</code> con el siguiente contenido:</p> <p></p> <ul> <li>.htaccess: es un archivo de configuraci\u00f3n utilizado por servidores web Apache. Este archivo permite modificar la configuraci\u00f3n del servidor a nivel de directorio, lo que significa que se puede establecer reglas espec\u00edficas para un directorio o subdirectorio del sitio web sin necesidad de modificar el archivo de configuraci\u00f3n global del servidor.</li> </ul> <p>Tras esto, se ejecutar\u00e1 el siguiente comando para construir la imagen: </p> <p>Si todo ha ido bien, se ejecutar\u00e1 el siguiente comando para levantar el contenedor: </p> <p>Ahora Si accedemos a la direcci\u00f3n <code>http://ip-servidor:3000/demo</code> y nos logueamos con las credenciales de acceso <code>admin</code> y <code>Secret123</code>, deber\u00e1 aparecer la siguiente pantalla:</p> <p></p>"}]}